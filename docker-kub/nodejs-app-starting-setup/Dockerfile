# 노드 이미지를 끌고와라
FROM node
# 모든 후속명령이 이 폴더에서 일어난다
# 우리의 코드가 있을 곳이기 때문이다
WORKDIR /app
# 최적화 package.json을 먼저 복사하고 인스톨! => 코드만 바꿀경우 캐시되어 매우 빠르다
# 코드만 바꿀경우 npm install이 캐시된다!
COPY package.json /app
# 디폴트로 이러한 모든 명령어는 도커 컨테이너 및 이미지의 작업 디렉토리에서 실행됨
# 디폴트 workdir 컨테이너 파일 시스템의 루트 폴더
# ./는 도커의 현재 작업 디렉터리를 말한다
RUN npm install
# 첫 번째 컨테이너 외부의 경로(로컬 현재폴더) 두번째는 이미지 내부의 경로 
# 도커파일이 있는 폴더의 도커파일을 제외한 모든 파일이 컨테이너 내부에 생성
# 이미지와 컨테이너에 생성된다
COPY . /app
# 우리의 로컬 시스템에 특정 포트를 노출시키고 싶다는 명령어
# 이래야 접근이 가능하다 로컬에서
EXPOSE 80
# RUN은 이미지가 빌드 될 때 마다 실행되기 때문에 
# 이미지는 컨테이너의 템플릿이다 . 이미지를 기반으로 컨테이너를 사용하는것
# 즉 컨테이너에서 실행되어야 하기 때문에 CMD 명령으로 서버를 실행하자
CMD [ "node", "server.js" ]


